  local ReplicatedFirst = game.ReplicatedFirst
    local LocalPlayer = game.Players.LocalPlayer
    local client = {}
    client.networksend = function(...) RemoteEvent:FireServer(...) end
    client.network = require(ReplicatedFirst.ClientModules.Old.framework.network);

	client.physics = require(ReplicatedFirst.SharedModules.Old.Utilities.Math.physics:Clone())
    client.quotes = require(ReplicatedFirst.SharedModules.SharedConfigs.Quotes)
    client.particle = require(ReplicatedFirst.ClientModules.Old.framework.particle);
    client.camera = require(ReplicatedFirst.ClientModules.Old.framework.camera);
    client.sound = require(ReplicatedFirst.ClientModules.Old.framework.sound);
    client.effects = require(ReplicatedFirst.ClientModules.Old.framework.effects);
    client.input = require(ReplicatedFirst.ClientModules.Old.framework.input);
	client.screencull = require(ReplicatedFirst.ClientModules.Utilities.Visual.Optimization.ScreenCull);
    client.publicsettings = require(ReplicatedFirst.SharedModules.SharedConfigs.PublicSettings);
    client.bulletcheck = require(ReplicatedFirst.SharedModules.Old.BulletCheck);
    client.gundatagetter = require(ReplicatedFirst.SharedModules.Old.Data.GunDataGetter);
    client.raycast = require(ReplicatedFirst.SharedModules.Utilities.Geometry.Raycast);

	for i,v in pairs(getgc(true)) do
		if (type(v) == "function") then
			local name = debug.getinfo(v).name; do
				if (name == "loadgun") then
					client.loadgun = v
				end
				if (name == "loadplayer") then
					client.loadplayer = v
					debug.setupvalue(v, 1, "get noobed")
				end
			end
		end
		if (type(v) == "table") then
			if (rawget(v, "gammo")) then
				client.gamelogic = v
			end
			if (rawget(v, "setmovementmode")) then
				client.char = v
			end
			if (rawget(v, "getbodyparts")) then
				client.replication = v
			end
			if (rawget(v, "firehitmarker")) then
				client.uieffects = v
			end
			if (rawget(v, "checkkillzone")) then
				client.roundsystem = v
			end
            if (rawget(v, "deploy") and rawget(v, "isdeployed")) then
                client.menu = v
            end
		end
        if (client.loadgun and client.loadplayer and client.gamelogic and client.char and client.replication and client.uieffects and client.roundsystem and client.menu) then
            break
        end
	end

    client.chartable = debug.getupvalue(client.replication.getbodyparts, 1)
    client.updatertable = debug.getupvalue(client.replication.getupdater, 1)
    client.characters = debug.getupvalue(client.replication.getplayerhit, 1)

	client.weapons = {}; do
		for i,v in pairs(game.ReplicatedStorage.GunModules:GetChildren()) do
			client.weapons[v.Name] = require(v)
		end
	end
return client
